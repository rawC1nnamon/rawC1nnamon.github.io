---
import { getCollection } from 'astro:content';
import BlogPostCard from '@/components/BlogPostCard.astro';
import Layout from '@/layouts/Layout.astro';

const allPosts = await getCollection('blog');
const sortedPosts = allPosts.sort((a, b) => 
  new Date(b.data.pubDate) - new Date(a.data.pubDate)
);

const groupedPosts = sortedPosts.reduce((acc, post) => {
  const category = post.id.split('/')[0] || 'otros';
  if (!acc[category]) acc[category] = [];
  acc[category].push(post);
  return acc;
}, {});
---

<Layout title="Blog">
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <aside class="hidden md:block w-64 p-4 bg-black border-r border-white overflow-y-auto fixed h-full z-10">
      <h2 class="text-white text-xl font-bold mb-4">Categor√≠as</h2>
      {Object.entries(groupedPosts).map(([category, posts]) => (
        <details class="mb-2 group text-white" open>
          <summary class="cursor-pointer hover:text-gray-300 py-1 font-medium">
            {category.charAt(0).toUpperCase() + category.slice(1)} <span class="text-white/50">({posts.length})</span>
          </summary>
          <ul class="ml-4 mt-1">
            {posts.map(post => {
              const slug = post.id.split('/')[1]?.replace('.md', '');
              return (
                <li class="mb-1">
                  <a
                    href={`/blog/${category}/${slug}`}
                    class="text-white/70 hover:text-white hover:underline text-sm block py-1"
                  >
                    {post.data.title}
                  </a>
                </li>
              );
            })}
          </ul>
        </details>
      ))}
    </aside>

    <!-- Main Content -->
    <main class="w-full md:ml-64 p-6">
      <h1 class="text-4xl font-bold mb-6">Blog</h1>
      <div class="grid gap-8 md:grid-cols-2">
        {sortedPosts.map(post => <BlogPostCard post={post} />)}
      </div>
    </main>
  </div>
</Layout>
